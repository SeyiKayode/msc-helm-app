version: 0.2
run-as: root

env:
  parameter-store:
    AWS_ACCESS_KEY_ID: "/test/kayode/access-key-id"
    AWS_SECRET_ACCESS_KEY: "/test/kayode/access-key-secret"

phases:
  install:
    commands:
      - echo Installing app dependencies...
      - curl -o kubectl curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.27.1/2023-04-19/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - source ~/.bashrc
      - echo 'Check kubectl version'
      - kubectl version --short --client
      - chmod +x scripts/prerequisites.sh
      - sh scripts/prerequisites.sh

  pre_build:
    commands:
      - echo Logging in to Amazon EKS...
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $AWS_CLUSTER_NAME
      - echo check config
      - kubectl config view --minify
      - echo check kubectl access
      - kubectl get svc
      - echo "helm add the s3 as chart repository"
      - helm s3 init s3://helm-kay-bucket/stable/dev
      - helm repo add dev-repo s3://helm-kay-bucket/stable/app/
      - cd msc-helm-chart
      - echo "helm package"
      - helm package . >> output
      - package=$(awk -F ':' '{print $2}' output)
      - echo "helm push to s3"
      - helm s3 push $package dev-repo --force
      - echo "check the chart in s3"
      - helm repo update
      - helm search repo dev-repo

  build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG 
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo Push the latest image to cluster
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | helm registry login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - helm upgrade --install $HELM_CHART_NAME stable/app --version 0.1.0 --namespace dev
      # - chmod +x scripts/deploy_app.sh
      # - sh scripts/deploy_app.sh
